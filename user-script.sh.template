SIVART_BASE_LOG_DIR=/tmp/sivart/logs
mkdir -p $SIVART_BASE_LOG_DIR
SIVART_SLAVE=/tmp/sivart-slave

# Used for caching and logging and other utilities
git clone https://github.com/zzo/sivart-slave $SIVART_SLAVE > /tmp/sivart-slave.log 2>&1
pushd $SIVART_SLAVE > /dev/null 2>&1
npm install >> /tmp/sivart-slave.log 2>&1
popd > /dev/null 2>&1

function getCaches() {
  # besdies directory to cache we also need the full repo name & branch
  nodejs $SIVART_SLAVE/getCache.js $SIVART_REPO_NAME $SIVART_REPO_BRANCH
}

function saveCache() {
  # besdies directory to cache we also need the full repo name & branch
  nodejs $SIVART_SLAVE/writeCache.js $1 $SIVART_REPO_NAME $SIVART_REPO_BRANCH
}

function saveLogs() {
  nodejs $SIVART_SLAVE/saveLogs.js $SIVART_BASE_LOG_DIR
}

function deleteInstance() {
  # assumes you've called saveLogs first!
  cd ~/sivart-slave
  node deleteInstance.js
}

function runCommand() {
  timestamp=`date +"%s.%N"`
  start=`date +"%s"`
  logf=$SIVART_BASE_LOG_DIR/$timestamp
  echo "--SIVART START: $1: $timestamp: `date`" | tee $logf
  eval $1 >> $logf 2>&1
  end=`date +"%s"`
  keep=$?
  len=$((end - start))
  if [[ $keep -gt 0 ]] 
    then
    echo "--SIVART FAILED: $1: $keep: $len seconds" | tee -a $logf
    echo "$1" > $SIVART_BASE_LOG_DIR/failed
    echo "$timestamp" >> $SIVART_BASE_LOG_DIR/failed
    echo "$keep" >> $SIVART_BASE_LOG_DIR/failed
    echo "$end" >> $SIVART_BASE_LOG_DIR/failed
    echo "$len" >> $SIVART_BASE_LOG_DIR/failed
    saveLogs
    exit $keep
  else 
    echo "--SIVART SUCCEEDED: $1: $len seconds" | tee -a $logf
  fi
#  cat $logf  # Drop output here when done or keep this file clean?
} 
