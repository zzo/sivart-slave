SIVART_BASE_LOG_DIR=/tmp/sivart/logs
mkdir -p $SIVART_BASE_LOG_DIR
SIVART_SLAVE=/usr/local/sivart-slave

# Used for caching and logging and other utilities
#git clone https://github.com/zzo/sivart-slave $SIVART_SLAVE > /tmp/sivart-slave.log 2>&1
pushd $SIVART_SLAVE > /dev/null 2>&1
git pull >> /tmp/sivart-slave.log 2>&1
npm install >> /tmp/sivart-slave.log 2>&1
popd > /dev/null 2>&1

function getCaches() {
  # besdies directory to cache we also need the full repo name & branch
  nodejs $SIVART_SLAVE/getCache.js $SIVART_REPO_NAME $SIVART_REPO_BRANCH
}

function saveCache() {
  # besdies directory to cache we also need the full repo name & branch
  nodejs $SIVART_SLAVE/writeCache.js $1 $SIVART_REPO_NAME $SIVART_REPO_BRANCH
}

function saveLogs() {
  nodejs $SIVART_SLAVE/saveLogs.js $SIVART_BASE_LOG_DIR
}

function deleteInstance() {
  nodejs $SIVART_SLAVE/deleteInstance.js
}

function runCommand() {
  logf=$SIVART_BASE_LOG_DIR/`date +"%s.%N"`.log
  echo "--COMMAND START: $1: $logf: `date`" | tee $logf
  start=`date +"%s"`
  eval $1 >> $logf 2>&1
  keep=$?
  end=`date +"%s"`
  len=$((end - start))
  if [[ $keep -gt 0 ]] 
    then
    echo "--COMMAND FAILED: $1: $keep: $len seconds" | tee -a $logf
    echo "command: $1" > $SIVART_BASE_LOG_DIR/failed
    echo "log file: `basename $logf`" >> $SIVART_BASE_LOG_DIR/failed
    echo "exit code: $keep" >> $SIVART_BASE_LOG_DIR/failed
    echo "start time: `date -d @$start`" >> $SIVART_BASE_LOG_DIR/failed
    echo "end time: `date -d @$end`" >> $SIVART_BASE_LOG_DIR/failed
    echo "command ran for: $len seconds" >> $SIVART_BASE_LOG_DIR/failed
    saveLogs
    deleteInstance
  else 
    echo "--COMMAND SUCCEEDED: $1: $len seconds" | tee -a $logf
  fi
#  cat $logf  # Drop output here when done or keep this file clean?
} 
