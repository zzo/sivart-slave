SIVART_BASE_LOG_DIR=/tmp/sivart/logs
mkdir -p $SIVART_BASE_LOG_DIR
HOSTNAME=`hostname`
SIVART_NODE=0.10
USER_NODE=0.10  # will get overwritten
SIVART_SLAVE=/tmp/sivart_slave

function updateState() {
  pushd $SIVART_SLAVE
  nvm use $SIVART_NODE
  node updateState.js $1
  nvm use $USER_NODE
  popd
}

function saveLogs() {
  cd
  git clone https://github.com/zzo/sivart-slave
  cd sivart-slave
  npm install
  node saveLogs.js $SIVART_BASE_LOG_DIR
}

function deleteInstance() {
  # assumes you've called saveLogs first!
  cd ~/sivart-slave
  node deleteInstance.js $HOSTNAME
}

function runCommand() {
  timestamp=`date +"%s.%N"`
  start=`date +"%s"`
  logf=$SIVART_BASE_LOG_DIR/$timestamp
  echo "--SIVART START: $1: $timestamp: `date`" | tee $logf
  eval $1 >> $logf 2>&1
  end=`date +"%s"`
#  cat $logf  # Drop output here when done or keep this file clean?
  keep=$?
  len=$((end - start))
  if [[ $keep -gt 0 ]] 
    then
    echo "--SIVART FAILED: $1: $keep: $len seconds" | tee -a $logf
    echo "$1" > $SIVART_BASE_LOG_DIR/failed
    echo "$timestamp" >> $SIVART_BASE_LOG_DIR/failed
    echo "$keep" >> $SIVART_BASE_LOG_DIR/failed
    echo "$end" >> $SIVART_BASE_LOG_DIR/failed
    echo "$len" >> $SIVART_BASE_LOG_DIR/failed
    saveLogs
    exit $keep
  else 
    echo "--SIVART SUCCEEDED: $1: $len seconds" | tee -a $logf
  fi
} 

curl https://raw.githubusercontent.com/creationix/nvm/v0.25.0/install.sh | sh
source ~/.nvm/nvm.sh
nvm install $SIVART_NODE
git clone https://github.com/zzo/sivart-slave $SIVART_SLAVE
pushd $SIVART_SLAVE
npm install
popd

